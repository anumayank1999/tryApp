{"version":3,"sources":["logo.svg","schema/index.jsx","App.js","reportWebVitals.js","Navbar.js","Home.js","NotFound.js","index.js"],"names":["module","exports","__webpack_require__","p","vale","Yup","PolicyNo","min","max","required","AGE","Police_avail","Summary","select_car","initialValues","Forum","values","errors","touched","handleBlur","handleChange","handleSubmit","useFormik","validationSchema","onSubmit","action","console","log","config","method","url","headers","Content-Type","Access-Control-Request-Headers","api-key","data","JSON","stringify","collection","database","dataSource","document","axios","then","response","catch","error","resetForm","React","createElement","Fragment","htmlFor","value","onChange","onBlur","type","name","placeholder","id","defaultChecked","for","className","disabled","length","App","href","target","rel","reportWebVitals","onPerfEntry","Function","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","style","marginRight","Home","NotFound","ReactDOM","createRoot","getElementById","render","StrictMode","BrowserRouters","Routes","Route","path","element"],"mappings":"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","file":"static/js/main.06f23fcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import * as Yup from \"yup\";\r\n\r\nexport const vale=Yup.object({\r\n    PolicyNo:Yup.string().min(8).max(10).required('value must of of alteast 8 letters'),\r\n    AGE:Yup.number().required('Number format'),\r\n    Police_avail:Yup.string().min(2).max(3),\r\n    Summary:Yup.string().min(30).required('atleast 30 char'),\r\n    select_car:Yup.string().max(10).required('select type of car'),\r\n})","import logo from './logo.svg';\nimport './App.css';\nimport { useFormik } from 'formik';\nimport React  from 'react';\n\nimport { vale } from \"./schema\";\n//import sql from sql;\nimport axios from 'axios';\n\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">\n    \n      <header className=\"App-header\">\n        hi\n        <h1>\n          Welcome to Claims Form!!!\n        </h1>\n        \n        <Forum />\n        <a\n          className=\"App-link\"\n          href=\"www.google.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >More about us!!!\n        </a>\n      </header>\n    </div>\n  );\n}\n\nconst initialValues ={\n  PolicyNo:\"\",\n  AGE:\"\",\n  select_car:\"\",\n  Police_avail:\"No\",\n  Summary:\"\",\n};\n\n\n\n\n\nconst Forum = () => {\n  \n\n  const {values, errors, touched ,handleBlur,handleChange,handleSubmit} = useFormik({\n    initialValues: initialValues,\n    validationSchema: vale,\n    onSubmit: (values, action) => {\n      \n      console.log(values);\n     /*    -----------------------------------------------to save in localhost Mysql using node need to run node at this -> C:\\Users\\INORI\\Downloads\\ML\\ProjectForm\\backend\n      fetch('http://localhost:3000/store-data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        // We convert the React state to JSON and send it as the POST body\n        body: JSON.stringify(values),\n        \n        //body: values\n      }).then(function(response) {\n        console.log(response.json())\n        return response.json();\n      });\n      console.log(\"values\");\n      console.log(values);*/\n      \n      /*------------------- to store on mongodb nosql format online cloud using mom gmail created account on atlas mongodb account used postman to test\n      */\n      var data = JSON.stringify({\n        \"collection\": \"api\",\n        \"database\": \"apitry\",\n        \"dataSource\": \"Cluster0\",\n        \"document\": {\n            \"PolicyNo\": values.PolicyNo,\n            \"AGE\":values.AGE,\n            \"select_car\":values.select_car,\n            \"Police_avail\":values.Police_avail,\n            \"Summary\":values.Summary\n\n        }\n    });\n    \n    var config = {\n      method: 'post',\n      url: 'https://ap-south-1.aws.data.mongodb-api.com/app/data-xvirqiy/endpoint/data/v1/action/insertOne',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Request-Headers': '*',\n        'api-key': 'q1Z4vPG82gyygd7tbjfN1v7bng8soWJ9ZGh6KYbLBOMqREvzzo8wfeeEAKfYkqSh',\n      },\n      data: data\n    };\n\n    axios(config)\n    .then(function (response) {\n        console.log(JSON.stringify(response.data));\n    })\n    .catch(function (error) {\n        console.log(error);\n    });\n      \n      action.resetForm();\n      \n    },\n    \n  });\n  console.log(errors)\n  return (\n    <> <form onSubmit={handleSubmit}>\n        <label htmlFor='PolicyNo'>\n          Policy No. <input value={values.PolicyNo} onChange={handleChange} onBlur={handleBlur} type=\"text\" name='PolicyNo' placeholder='Policy No' id='PolicyNo'/>\n          {errors.PolicyNo && touched.PolicyNo ? (\n            <p>{errors.PolicyNo}</p>):null}\n          </label>\n          <label htmlFor='age'>\n        {\"\\t\"} Age <input value={values.AGE} onChange={handleChange} onBlur={handleBlur}\n        type=\"Number\" name='AGE' placeholder='AGE' id='age'/>\n        </label>\n        <br/>\n        <label htmlFor='CarType'>Type of Car \n        {/*<input value={values.select_car} onChange={handleChange} onBlur={handleBlur}\n        type=\"text\" name='select_car' placeholder='select_car'id='CarType'/>*/}\n        <select name=\"select_car\" placeholder='select_car' id='CarType' value={values.select_car} onChange={handleChange} onBlur={handleBlur}>\n          <option value=\"No Selection of Car\">Select a Car</option>\n          <option value=\"Sedan\" >Sedan</option>\n          <option value=\"Hatchback\">Hatchback</option>\n          <option value=\"SUV\">SUV</option>\n        </select>\n        </label>\n        <label htmlFor='Police'>{\"\\t\"} Police Involved \n        {/*<input value={values.Police_avail} onChange={handleChange} onBlur={handleBlur}\n        name='Police_avail' type=\"text\" placeholder='Police_avail' id='Police'/>\n        */}</label>\n        {/*<select name=\"Police_avail\" placeholder='Police_avail' id='Police' value={values.Police_avail} onChange={handleChange} onBlur={handleBlur}>\n          <option value=\"No\">No</option>\n          <option value=\"Yes\">Yes</option>\n          <option value=\"NA\">Not Sure</option>\n        </select>*/}\n        <span name=\"Police_avail\" placeholder='Police_avail' id='Police' value={values.Police_avail} onChange={handleChange} onBlur={handleBlur}>\n          <input type=\"radio\" id=\"Police\" name=\"Police_avail\" value=\"No\" defaultChecked/>\n          <label for=\"Police\">No</label>\n          <input type=\"radio\" id=\"Police\" name=\"Police_avail\" value=\"Yes\"/>\n          <label for=\"Police\">Yes</label><br/>\n        </span>\n        \n        \n        <label htmlFor='Detail'>Summary <input value={values.Summary} onChange={handleChange} onBlur={handleBlur}\n        className='txt' name='Summary' type=\"textarea\" placeholder='Summary' id='Detail'/>\n        </label>\n        <button type=\"submit\" disabled={values.PolicyNo.length === 0}>Report</button>\n        \n        \n        </form></>\n  )\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    \r\n      <>\r\n        <nav>\r\n        <a href='/tryApp' style={{ marginRight: 10 }}>Home </a>\r\n        <a href='/tryApp/Form'>Forum </a>\r\n        </nav>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      This is Home Page with no css as of now just for testing Routing of Pages.\r\n      More details on Form Page.\r\n\r\n      Thanks\r\n      Anumayank\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n      Page not Found 404\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport NotFound from './NotFound';\nimport { HashRouter as BrowserRouters, Route, Routes } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Navbar/>\n    <BrowserRouters >\n    <Routes>\n    <Route path='/tryApp' element={<Home/>} />\n    <Route path='/tryApp/Form' element={<App/>} />\n   {/* <Route path=\"*\" element={<NotFound/>}/> */}\n    </Routes>\n    </BrowserRouters>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}